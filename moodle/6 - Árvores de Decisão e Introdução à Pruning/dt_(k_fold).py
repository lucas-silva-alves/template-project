# -*- coding: utf-8 -*-
"""DT (K-fold).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PpuayoB65rXpiviUzH1ncGf0SzmB0RBC
"""

from sklearn import tree
from sklearn import datasets
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.model_selection import GridSearchCV


dataset = datasets.load_breast_cancer()


X = dataset.data
y = dataset.target

target_names = dataset.target_names
feature_names = dataset.feature_names


X_trainval, X_test, y_trainval, y_test = train_test_split(X, y, random_state = 1)



parameters = {'max_depth':range(3,20)}
clf = GridSearchCV(tree.DecisionTreeClassifier(), parameters, cv=5)
clf.fit(X_trainval, y_trainval)
clf_best = clf.best_estimator_
print (clf.best_score_, clf.best_params_)

best_depth = clf.best_params_["max_depth"]
print("Best depth: %f" %best_depth)


# retraining for the whole trainval set
clf_best.fit(X_trainval, y_trainval)

# testing
predictedY_trainval = clf_best.predict(X_trainval)
predictedY_test = clf_best.predict(X_test)

accuracy_trainval = accuracy_score(y_trainval, predictedY_trainval)
accuracy_test = accuracy_score(y_test, predictedY_test)

print("Accuracy for training/validation set: %f" %(accuracy_trainval*100))
print("Accuracy for test set: %f" %(accuracy_test*100))


# export in graphical format
import graphviz
dot_data = tree.export_graphviz(clf_best, out_file=None, filled=False, rounded=True, impurity=True, class_names=target_names, feature_names=feature_names)

graph = graphviz.Source(dot_data)
graph.render("graph")

# export in text format
r = tree.export_text(clf_best)
print('\n'+r)